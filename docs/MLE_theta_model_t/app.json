[{"name":"app.R","content":"library(shiny)\r\nlibrary(munsell)\r\nlibrary(ggplot2)\r\nlibrary(bslib)\r\n\r\n\r\nNLL <- function(df, a = 1, theta = 0, b = 0, d = 1, q = 0, Y =.5, sigma = 2) {\r\n  term1 <- 0.5 * df * log(df)\r\n  term2 <- 0.5 * (-1 - df) * log(df + (exp(2 * a * theta) * ( -b - d * q + Y)^2) / sigma^2)\r\n  term3 <- log(exp(-a * theta) * sigma)\r\n  term4 <- log(beta(df / 2, 1 / 2))\r\n  \r\n  result <- term1 + term2 - term3 - term4\r\n  \r\n  # return negative LL\r\n  return(-result)\r\n}\r\n\r\n\r\ntheme_set(theme_classic(base_size = 16, \r\n                        base_family = 'serif'))\r\n\r\n# Define the UI \r\nui <- bslib::page_fluid(\r\n  # Main plot area\r\n  \r\n  mainPanel(\r\n    \r\n    fluidRow(column(12, plotOutput(\"distPlot\", height = \"370px\", width = \"150%\")))),\r\n  \r\n  fluidRow(\r\n    column(2, numericInput(\"Y\", \"Y\", value = .5, min = -20, max = 20, step = 1)),\r\n    column(1, numericInput(\"b\", \"b\", value = 0, min = -10, max = 10, step = 0.25)),\r\n    column(1, numericInput(\"d\", \"d\", value = 1, min = 0.1, max = 10, step = 0.25)),\r\n    column(1, numericInput(\"sigma\", \"sigma\", value = 1, min = 0.1, max = 8, step = 0.25)),\r\n    column(1, numericInput(\"a\", \"a\", value = 1, min = .1, max = 4, step = 0.25)),\r\n    column(1, numericInput(\"q\", \"q\", value = 0, min = -2, max = 2, step = 1)),\r\n    column(1, numericInput(\"df\", \"df\", value = 5, min = 0.1, max = 200, step = 1)))\r\n)\r\n\r\n\r\n\r\nserver <- function(input, output, session) {\r\n  \r\n  output$distPlot <- renderPlot({\r\n    # Get values from inputs\r\n    \r\n    \r\n    # Create the plot\r\n    ggplot() +\r\n      geom_function(fun = NLL, args = list(a = input$a, \r\n                                           Y = input$Y,\r\n                                           df = input$df, \r\n                                           sigma = input$sigma, \r\n                                           b = input$b,\r\n                                           d = input$d, \r\n                                           q = input$q), \r\n                    color = \"blue\") +\r\n      xlab(\"\\u03b8\") +\r\n      ylab(expression(NLL*(theta))) +\r\n      xlim(-6, 6)\r\n    \r\n    \r\n    \r\n  }, res = 100)\r\n}\r\n\r\n\r\n\r\n\r\n# Run the Shiny app\r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n# shinylive::export(appdir = \".\",\r\n#                   destdir = \"docs/\")\r\n","type":"text"},{"name":"shinilive apps.Rproj","content":"Version: 1.0\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"}]
