[{"name":"app.R","content":"library(shiny)\r\nlibrary(munsell)\r\nlibrary(ggplot2)\r\nlibrary(bslib)\r\n\r\n\r\ninformation <- function(a, theta, df, sigma, b, d, q, lb, ub) {\r\n  \r\n  # Precompute reused terms\r\n  sqrt_nu <- sqrt(df)\r\n  exp_a_theta <- exp(a * theta)\r\n  exp_2a_theta <- exp(2 * a * theta)\r\n  \r\n  # Define terms\r\n  x1 <- b - lb + d * q\r\n  x2 <- b + d * q - ub\r\n  \r\n  num1 <- exp_a_theta * x1\r\n  denom1 <- exp_2a_theta * x1^2 + df * sigma^2\r\n  \r\n  num2 <- exp_a_theta * x2\r\n  denom2 <- exp_2a_theta * x2^2 + df * sigma^2\r\n  \r\n  atan_term1 <- atan(num1 / (sqrt_nu * sigma))\r\n  atan_term2 <- atan(num2 / (sqrt_nu * sigma))\r\n  \r\n  # Final expression\r\n  prefactor <- a^2 * exp(-a * theta) * df * (1 + df) * sigma^2\r\n  \r\n  result <- prefactor * (\r\n    -num1 / denom1 + \r\n      num2 / denom2 + \r\n      atan_term1 / (sqrt_nu * sigma) - \r\n      atan_term2 / (sqrt_nu * sigma)\r\n  )\r\n  \r\n  return(result)\r\n}\r\n\r\n\r\ntheme_set(theme_classic(base_size = 16, \r\n                        base_family = 'serif'))\r\n\r\n# Define the UI \r\nui <- bslib::page_fluid(\r\n  # Main plot area\r\n  \r\n  mainPanel(\r\n    \r\n    fluidRow(column(12, plotOutput(\"distPlot\", height = \"370px\", width = \"150%\")))),\r\n  \r\n  fluidRow(\r\n    column(2, numericInput(\"b\", \"b\", value = 0, min = -10, max = 10, step = 0.25)),\r\n    column(2, numericInput(\"d\", \"d\", value = 1, min = 0.1, max = 10, step = 0.25)),\r\n    column(2, numericInput(\"sigma\", \"sigma\", value = 1, min = 0.1, max = 5, step = 0.25)),\r\n    column(2, numericInput(\"a\", \"a\", value = 1, min = -3, max = 3, step = 0.25)),\r\n    column(2, numericInput(\"q\", \"q\", value = 0, min = -2, max = 2, step = 1)),\r\n    column(2, numericInput(\"df\", \"df\", value = 5, min = 0.1, max = 200, step = 1)))\r\n)\r\n\r\n\r\n\r\nserver <- function(input, output, session) {\r\n  \r\n  output$distPlot <- renderPlot({\r\n    # Get values from inputs\r\n    \r\n    \r\n    \r\n    # Create the plot\r\n    ggplot() +\r\n      geom_function(fun = information, args = list(a = input$a, \r\n                                                   df = input$df, \r\n                                                   sigma = input$sigma, \r\n                                                   b = input$b,\r\n                                                   d = input$d, \r\n                                                   q = input$q, \r\n                                                   lb = -3, \r\n                                                   ub = 3), color = \"#1b305c\") +\r\n      xlab(\"\\u03b8\") +\r\n      ylab(expression(Epsilon~I*(theta))) +\r\n      xlim(-6, 6)\r\n    \r\n    \r\n    \r\n    \r\n  }, res = 100)\r\n}\r\n\r\n# Run the Shiny app\r\nshinyApp(ui = ui, server = server)\r\n\r\n# shinylive::export(appdir = \".\",\r\n#                   destdir = \"docs/\")\r\n","type":"text"},{"name":"shinilive apps.Rproj","content":"Version: 1.0\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"}]
