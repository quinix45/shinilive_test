[{"name":"app.R","content":"library(shiny)\r\nlibrary(munsell)\r\nlibrary(ggplot2)\r\nlibrary(bslib)\r\n\r\n# Define the UI \r\nui <- bslib::page_fluid(\r\n    # Main plot area\r\n    \r\n    \r\n    \r\n    mainPanel(\r\n        \r\n        fluidRow(column(12, plotOutput(\"distPlot\", height = \"370px\", width = \"150%\")))),\r\n    \r\n    fluidRow(\r\n        column(2, numericInput(\"b\", \"b\", value = 0, min = -10, max = 10, step = 0.25)),\r\n        column(2, numericInput(\"d\", \"d\", value = 1, min = 0.1, max = 10, step = 0.25)),\r\n        column(2, numericInput(\"sigma\", \"sigma\", value = 1, min = 0, max = 5, step = 0.25)),\r\n        column(2, numericInput(\"a\", \"a\", value = 1, min = -3, max = 3, step = 0.25)),\r\n        column(2, numericInput(\"theta\", \"theta\", value = 0, min = -4, max = 4, step = 0.25)),\r\n        column(2, numericInput(\"df\", \"df\", value = 20, min = 0.1, max = 200, step = 1))))\r\n\r\n\r\n####### Plot function #######\r\n\r\n\r\n\r\nlibrary(extraDistr)\r\n\r\ntheme_set(theme_classic(base_size = 16, \r\n                        base_family = 'serif'))\r\n\r\n\r\n\r\nModel_plot_full <- function( b = 0, d = 2, sd = 1, df = 8, theta = 0, a = 1, title = \"\"){\r\n    \r\n    Q <- c(-2, -1, 0, 1, 2)\r\n    \r\n    \r\n    means <- c(b + Q[1]*d,\r\n               b + Q[2]*d,\r\n               b + Q[3]*d,\r\n               b + Q[4]*d,\r\n               b + Q[5]*d) \r\n    \r\n    p <- ggplot() +\r\n        geom_function(fun = dlst, args = list(mu = means[1], sigma = sd/exp(a*theta), df = df), color = \"blue\") +\r\n        geom_function(fun = dlst, args = list(mu = means[2], sigma = sd/exp(a*theta), df = df), color = \"blue\") +\r\n        geom_function(fun = dlst, args = list(mu = means[3], sigma = sd/exp(a*theta), df = df), color = \"blue\") +\r\n        geom_function(fun = dlst, args = list(mu = means[4], sigma = sd/exp(a*theta), df = df), color = \"blue\") +\r\n        geom_function(fun = dlst, args = list(mu = means[5], sigma = sd/exp(a*theta), df = df), color = \"blue\") +\r\n        geom_segment(aes(x = means[1], xend = means[1], y = 0, yend = dlst(means[1], mu = means[1], sigma = sd/exp(a*theta), df =df)), linetype = 2) +\r\n        annotate(\"text\", x= means[1], y = dlst(means[1], mu = means[1], sigma = sd/exp(a*theta), df =df) +.05, label=\"5%\") +\r\n        geom_segment(aes(x = means[2], xend = means[2], y = 0, yend = dlst(means[2], mu = means[2], sigma = sd/exp(a*theta), df =df)), linetype = 2) +\r\n        annotate(\"text\", x= means[2], y = dlst(means[2], mu = means[2], sigma = sd/exp(a*theta), df =df) +.05, label=\"25%\") +\r\n        geom_segment(aes(x = means[3], xend = means[3], y = 0, yend = dlst(means[3], mu = means[3], sigma = sd/exp(a*theta), df =df)), linetype = 2) +\r\n        annotate(\"text\", x= means[3], y = dlst(means[3], mu = means[3], sigma = sd/exp(a*theta), df =df) +.05, label=\"50%\") +\r\n        geom_segment(aes(x = means[4], xend = means[4], y = 0, yend = dlst(means[4], mu = means[4], sigma = sd/exp(a*theta), df =df)), linetype = 2) +\r\n        annotate(\"text\", x= means[4], y = dlst(means[4], mu = means[4], sigma = sd/exp(a*theta), df =df) +.05, label=\"75%\") +\r\n        geom_segment(aes(x = means[5], xend = means[5], y = 0, yend = dlst(means[5], mu = means[5], sigma = sd/exp(a*theta), df =df)), linetype = 2) +\r\n        annotate(\"text\", x= means[5], y = dlst(means[5], mu = means[5], sigma = sd/exp(a*theta), df =df) +.05, label=\"95%\") +\r\n        xlab(\"Model Implied Accuarcy Distributions at 5 Quantiles\") +\r\n        xlim(-7, 7) +\r\n        ylab(\"\") +\r\n        ggtitle(title) +\r\n        scale_y_continuous(expand = c(0,0),\r\n                           limits = c(0,dlst(means[3], mu = means[3], sigma = sd/exp(a*theta), df = df) +.1)) +\r\n        theme(plot.title = element_text(hjust = 0.5)) \r\n    \r\n    \r\n    print(p)\r\n}\r\n\r\n\r\n\r\n\r\n# Define the server function for the Shiny app\r\nserver <- function(input, output, session) {\r\n    \r\n    output$distPlot <- renderPlot({\r\n        # Get values from inputs\r\n        \r\n        \r\n        # Create the plot\r\n        Model_plot_full(b = input$b,\r\n                        d = input$d,\r\n                        sd = input$sigma,\r\n                        df = input$df,\r\n                        theta = input$theta ,\r\n                        a = input$a)\r\n        \r\n        \r\n    }, res = 100)\r\n}\r\n\r\n\r\n\r\n\r\n# Run the Shiny app\r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n","type":"text"}]
