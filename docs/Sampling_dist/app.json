[{"name":"app.R","content":"library(shiny)\r\nlibrary(munsell)\r\nlibrary(ggplot2)\r\nlibrary(bslib)\r\n\r\ntheme_set(theme_classic(base_size = 16, \r\n                        base_family = 'serif'))\r\n\r\n\r\n\r\nui <- bslib::page_fluid(\r\n  # Main plot area\r\n  \r\n  mainPanel(\r\n    \r\n    fluidRow(column(6, plotOutput(\"Population\")),\r\n             column(6, plotOutput(\"Sample\")))),\r\n  \r\n  fluidRow(\r\n    column(2, numericInput(\"Mean\", \"\\u03BC\", value = 5, min = -100, max = 100, step = 1)),\r\n    column(2, numericInput(\"SD\", \"\\u03C3\", value = 3, min = 0.1, max = 10, step = 0.25)),\r\n    column(2, numericInput(\"SS\", \"Sample Size\", value = 100, min = 2, max = 20000, step = 10)),\r\n    column(2, numericInput(\"NS\", \"Experiments\", value = 10, min = 1, max = 20000, step = 10))\r\n    , column(2, actionButton(\"start\", \"Run Experiments\"))\r\n  )\r\n)\r\n\r\n\r\n\r\nserver <- function(input, output, session) {\r\n  \r\n  output$Population <- renderPlot({\r\n    # Get values from inputs\r\n    \r\n    \r\n    \r\n    # Create the plot\r\n    ggplot() +\r\n      xlim(input$Mean-3*input$SD, input$Mean + 3*input$SD)+\r\n      geom_function(fun = dnorm, args = list(mean = input$Mean,\r\n                                             sd = input$SD),\r\n                    color = \"#1b305c\") +\r\n      xlab(\"Population Distribution\") +\r\n      geom_segment(aes(x = input$Mean,\r\n                       xend = input$Mean,\r\n                       y = 0,\r\n                       yend = dnorm(input$Mean, mean = input$Mean, sd = input$SD)),\r\n                   lty = 2) +\r\n      scale_y_continuous(expand = c(0,0)) + \r\n      theme( axis.text.y=element_blank(),\r\n             axis.ticks.y=element_blank(),\r\n             axis.line.y = element_blank(),\r\n             axis.title.y = element_blank())\r\n    \r\n    \r\n    \r\n    \r\n  }, res = 100)\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  sample <- eventReactive(input$start, {data.frame(colMeans(replicate(input$NS, \r\n                                                                      rnorm(n = input$SS, \r\n                                                                            mean = input$Mean, \r\n                                                                            sd = input$SD))))})\r\n  \r\n  \r\n  \r\n  output$Sample <- renderPlot({\r\n    # Get values from inputs\r\n    \r\n    rand_sample <- sample()\r\n    \r\n    \r\n    colnames(rand_sample) <- \"X\"\r\n    \r\n    ggplot(rand_sample, aes(x = X)) +\r\n      xlab(paste(\"Means for\", nrow(rand_sample), \"Experiments\")) +\r\n      scale_y_continuous(expand = c(0,0)) +\r\n      geom_histogram(color = \"black\",\r\n                     linewidth = .8,\r\n                     fill = \"#1b305c\",\r\n                     bins = 30) +\r\n      annotate(\"text\", \r\n               x = Inf,\r\n               y = Inf,\r\n               label = paste0(\"Mean =\", round(mean(rand_sample$X), 2),\"\\n\",\r\n                              \"SD (aka SE) =\", round(sd(rand_sample$X), 2)), hjust=1,vjust = 1) + \r\n      theme( axis.text.y=element_blank(),\r\n             axis.ticks.y=element_blank(),\r\n             axis.line.y = element_blank(),\r\n             axis.title.y = element_blank())\r\n    \r\n    \r\n  }, res = 100)\r\n}\r\n\r\n# Run the Shiny app\r\nshinyApp(ui = ui, server = server)\r\n\r\n# shinylive::export(appdir = \".\",\r\n#                   destdir = \"docs/\")\r\n","type":"text"},{"name":"README.md","content":"A repository for shiny apps that I use for html presentations\r\n\r\n## Quick Links\r\n\r\n\r\n**Interactive Sampling Distribution:** https://quinix45.github.io/shinylive_apps/Sampling_dist/\r\n\r\n**t Model Forecasting:** https://quinix45.github.io/shinylive_apps/t_model/\r\n\r\n**t Model Forecasting Expected Information:** https://quinix45.github.io/shinylive_apps/Einfo_t_model/\r\n\r\n**t Model Forecasting NLL $\\theta$:** [https://quinix45.github.io/shinylive_apps/Einfo_t_model/](https://quinix45.github.io/shinylive_apps/MLE_theta_model_t/)\r\n\r\n","type":"text"},{"name":"shinilive apps.Rproj","content":"Version: 1.0\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"}]
